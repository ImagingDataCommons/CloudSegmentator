name: Build and push Docker image

on:
  push:
    paths:
      - 'Dockerfiles/TotalSegmentator/splitWorkflow/**'
  pull_request:
    paths:
      - 'Dockerfiles/TotalSegmentator/splitWorkflow/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

      - name: Get changed files
        id: changed-files
        run: |
          if ${{ github.event_name == 'pull_request' }}; then
            echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_ENV
          else
            echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_ENV
          fi

      - name: Copy weights_download.sh to Docker build context
        run: |
          for dockerfile in ${{ env.changed_files }}; do
            if [[ "$dockerfile" == *"Dockerfiles/TotalSegmentator/splitWorkflow/task2"* || "$dockerfile" == *"Dockerfiles/TotalSegmentator/splitWorkflow/tasks1and2"* || "$dockerfile" == *"Dockerfiles/TotalSegmentator/splitWorkflow/endtoend"* ]]; then
              weights_dir=$(dirname "$dockerfile")
              cp "$weights_dir/weights_download.sh" .
            fi
          done

      - name: List changed files
        run: |
          for file in ${{ env.changed_files }}; do
            echo "$file was changed"
          done

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          for dockerfile in ${{ env.changed_files }}; do
            if [[ "$dockerfile" == *"Dockerfile"* ]]; then
              # Extract the subdirectory name from the Dockerfile path
              subdirectory_name=$(dirname "$dockerfile" | rev | cut -d'/' -f 1 | rev)
              tag="imagingdatacommons/totalsegmentator:$subdirectory_name"
              commit_hash=$(git rev-parse HEAD)
              docker build -t "$tag" --build-arg GIT_HASH="$commit_hash" -f "$dockerfile" .
              docker push "$tag"
            fi
          done
